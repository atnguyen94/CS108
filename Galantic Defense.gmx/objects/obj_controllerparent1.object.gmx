<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

// wave variables
path = null;
waves = 0;
enemies = 0;
start = false;
canSpawn = true;

// health and money vars
playerHp = 0;
money = 0;
xp = 0;

// tower cost var
towerCost = 0;

// tower menu var
towerPicked = picked.none;

// unlock variables
iceTowerUnlocked = false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enumerate constants

// which tower is picked

enum picked { none, one, two, ice, bomb, sniper, reverse };

// how mmuch does each tower cost

enum cost {one = 100, two = 150, ice = 125, bomb = 175, sniper = 150, reverse = 200 };




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select Tower From Menu

if ( mouse_check_button_pressed(mb_left))
{
    if(mouse_y &gt;= room_height - 40 &amp;&amp; mouse_y &lt;= room_height - 8)
    {
    if(mouse_x &gt;= 12 &amp;&amp; mouse_x &lt;= 48)
        towerPicked = picked.one;
            
    if(mouse_x &gt;= 77 &amp;&amp; mouse_x &lt;= 111)
        towerPicked = picked.two;

    if (mouse_x &gt;= 141 &amp;&amp; mouse_x &lt;= 175 &amp;&amp; iceTowerUnlocked)
        towerPicked = picked.ice;
        
    if (mouse_x &gt;= 205 &amp;&amp; mouse_x &lt;= 239 )
        towerPicked = picked.bomb;
        
    if (mouse_x &gt;= 279 &amp;&amp; mouse_x &lt;= 313 )
        towerPicked = picked.sniper;
        
    if (mouse_x &gt;= 343 &amp;&amp; mouse_x &lt;= 377 )
        towerPicked = picked.reverse;

    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check player health

if (playerHp &lt;= 0)
{
    show_message ("GAME OVER!");
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// upgrade tower

var towerid;

if(mouse_check_button_pressed(mb_left))
{
    towerid = collision_point(mouse_x, mouse_y, obj_TowerParent, true, true);
    if (towerid)
    {
      if (towerid.object_index == obj_Tower)
      {
        if (towerid.level &lt; 2)
            if( money &gt;= 50)
                {
                    towerid.level = 2;
                    money -= 50;
                }
      }  
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sell tower

var towerid;

if(mouse_check_button_pressed(mb_right))
{
    towerid = collision_point(mouse_x, mouse_y, obj_TowerParent, true, true);
    if (towerid)
    {
      if (towerid.object_index == obj_Tower)
      {
        if (towerid.level &lt; 2)
            if( money &gt;= 50)
                {
                    money += 75;
                    with (towerid)
                        instance_destroy();
                }
                else if (towerid.level == 2)
                {
                    money += round(50 * 0.75);
                    towerid.level = 1;
                }
      }  
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Place Tower at Mouse Position

if(mouse_check_button_pressed(mb_left))

{
    switch towerPicked
    {
        case picked.one:
        placeTower(cost.one, obj_Tower);
        break;
        
        case picked.two:
        placeTower(cost.two, obj_TowerTwo);
        break;
        
        case picked.ice:
        placeTower(cost.ice, obj_icetower);
        break;
        
        case picked.bomb:
        placeTower(cost.bomb, obj_bombtower);
        break;
        
        case picked.sniper:
        placeTower(cost.sniper, obj_snipertower);
        break;
        
        case picked.reverse:
        placeTower(cost.reverse, obj_reversaltower);
        break;
        default:
            break;
    }
    towerPicked = picked.none
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw health and money

draw_set_halign(fa_left);

draw_text_colour(0, 32, "Money: " + string(money), c_yellow, c_yellow, c_yellow, c_yellow, 1);

for ( var i = 0; i &lt; playerHp; i++)
{
    draw_sprite(spr_PlayerHp, 0, i * 32, 0)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Tower Carried 

if (towerOnePicked)
{
    if(money &gt;= towerOneCost)
        draw_sprite_ext(spr_Tower, 0, mouse_x, mouse_y, 1, 1, 0, c_white, .5);
    else
            draw_sprite_ext(spr_Tower, 0, mouse_x, mouse_y, 1, 1, 0, c_red, .5);
    draw_circle(mouse_x, mouse_y, 100, c_red);
}

if (towerTwoPicked)
{
    if(money &gt;= towerTwoCost)
        draw_sprite_ext(spr_TowerTwo, 0, mouse_x, mouse_y, 1, 1, 0, c_white, .5);
    else
            draw_sprite_ext(spr_TowerTwo, 0, mouse_x, mouse_y, 1, 1, 0, c_red, .5);
    draw_circle(mouse_x, mouse_y, 50, c_red);
}

if (iceTowerPicked)
{
    if(money &gt;= iceTowerCost)
        draw_sprite_ext(spr_icetower, 0, mouse_x, mouse_y, 1, 1, 0, c_white, .5);
    else
            draw_sprite_ext(spr_icetower, 0, mouse_x, mouse_y, 1, 1, 0, c_red, .5);
    draw_circle(mouse_x, mouse_y, 80, c_red);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Tower Selection Menu

draw_rectangle_colour(0, room_height - 48, room_width, room_height, c_black, c_black,
                                            c_black, c_black, c_black);
                                            
if (money &gt;= cost.one)
draw_sprite(spr_Tower, 0, 32, room_height - 24);
else
draw_sprite_ext(spr_Tower, 0, 32, room_height - 24, 1, 1, 0, c_red, 1);

if (money &gt;= cost.two)
draw_sprite(spr_TowerTwo, 0, 96, room_height - 24);
else
draw_sprite_ext(spr_TowerTwo, 0, 96, room_height - 24, 1, 1, 0, c_red, 1);

if (iceTowerUnlocked)
{ 
    if(money &gt;= iceTowerCost)
        draw_sprite(spr_icetower, 0, 160, room_height - 24);
    else
        draw_sprite_ext(spr_icetower,0,160, room_height -24, 1, 1, 0, c_red, 1);
}

if (money &gt;= cost.bomb)
draw_sprite(spr_bombtower, 0, 224, room_height - 24);
else
draw_sprite_ext(spr_bombtower, 0, 224, room_height - 24, 1, 1, 0, c_red, 1);

if (money &gt;= cost.sniper)
draw_sprite(spr_snipertower, 0, 288, room_height - 24);
else
draw_sprite_ext(spr_snipertower, 0, 288, room_height - 24, 1, 1, 0, c_red, 1);

if (money &gt;= cost.reverse)
draw_sprite(spr_reversaltower, 0, 352, room_height - 24);
else
draw_sprite_ext(spr_reversaltower, 0, 352, room_height - 24, 1, 1, 0, c_red, 1);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Highlight selected tower
if(mouse_y &gt;= room_height - 40 &amp;&amp; mouse_y &lt;= room_height - 8){
    if(mouse_x &gt;= 13 &amp;&amp; mouse_x &lt;= 47)
        draw_roundrect_colour(12, room_height - 41, 48, room_height - 7, c_white, c_blue, true);
        
    if(mouse_x &gt;= 77 &amp;&amp; mouse_x &lt;= 111)
        draw_roundrect_colour(78, room_height - 41, 112, room_height - 7, c_white, c_blue, true);
        
    if(mouse_x &gt;= 141 &amp;&amp; mouse_x &lt;= 175 &amp;&amp; iceTowerUnlocked)
        draw_roundrect_colour(142, room_height - 41, 176, room_height - 7, c_white, c_blue, true);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Game

start = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
